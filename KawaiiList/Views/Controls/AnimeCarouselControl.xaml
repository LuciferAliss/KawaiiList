<UserControl x:Class="KawaiiList.Views.Controls.AnimeCarouselControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:KawaiiList.Views.Controls"
             mc:Ignorable="d" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:controls="clr-namespace:KawaiiList.Controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:viewModels="clr-namespace:KawaiiList.ViewModels.AnimeCarouselVM" 
             d:DataContext="{d:DesignInstance Type=viewModels:AnimeCarouselViewModel}"
             xmlns:interactivity="clr-namespace:HandyControl.Interactivity;assembly=HandyControl"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml"/>
                <hc:Theme />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="PathBaseStyle" TargetType="{x:Type Path}">
                <Setter Property="Stretch" Value="Uniform"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="FlowDirection" Value="LeftToRight"/>
            </Style>
            <Style x:Key="CarouselItemBaseStyle" TargetType="{x:Type hc:CarouselItem}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type hc:CarouselItem}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource AncestorType={x:Type hc:Carousel}}}" Margin="{TemplateBinding Padding}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="LeftPathStyle" BasedOn="{StaticResource PathBaseStyle}" TargetType="{x:Type Path}">
                <Setter Property="Data" Value="{StaticResource LeftGeometry}"/>
            </Style>
            <Style x:Key="RightPathStyle" BasedOn="{StaticResource PathBaseStyle}" TargetType="{x:Type Path}">
                <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX="-1" ScaleY="1"/>
                            <SkewTransform AngleY="0" AngleX="0"/>
                            <RotateTransform Angle="0"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
                <Setter Property="Data" Value="{StaticResource LeftGeometry}"/>
            </Style>
            <Style x:Key="RectangleFocusVisual" TargetType="{x:Type Rectangle}">
                <Setter Property="Margin" Value="-2"/>
                <Setter Property="Opacity" Value=".6"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                <Setter Property="StrokeThickness" Value="2"/>
                <Setter Property="StrokeDashArray" Value="1 1"/>
            </Style>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle RadiusX="4" RadiusY="4" Style="{StaticResource RectangleFocusVisual}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BaseStyle" TargetType="{x:Type Control}">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                <Setter Property="FontSize" Value="{StaticResource TextFontSize}"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            </Style>
            <Style x:Key="ButtonCustom" BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="Visibility" Value="Hidden"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Chrome" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value=".9"/>
                                    <Setter Property="Background" TargetName="Chrome" Value="{Binding (hc:BackgroundSwitchElement.MouseHoverBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value=".6"/>
                                    <Setter Property="Background" TargetName="Chrome" Value="{Binding (hc:BackgroundSwitchElement.MouseDownBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CarouselPateButton" BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type RadioButton}">
                <Setter Property="Margin" Value="5,0"/>
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="Visibility" Value="Hidden"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" SnapsToDevicePixels="true"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value=".9"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value=".6"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CarouselStyle1" TargetType="{x:Type hc:Carousel}">
                <Setter Property="PageButtonStyle" Value="{StaticResource CarouselPateButton}"/>
                <Setter Property="ItemContainerStyle" Value="{StaticResource CarouselItemBaseStyle}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type hc:Carousel}">
                            <hc:SimplePanel ClipToBounds="True">
                                <StackPanel x:Name="PART_Panel" Orientation="Horizontal"/>
                                <hc:SimplePanel x:Name="GridTop" Opacity="0">
                                    <Button Command="interactivity:ControlCommands.Prev" HorizontalAlignment="Left" Margin="30,0,0,0" Style="{StaticResource ButtonCustom}" VerticalAlignment="Center">
                                        <Border Background="{DynamicResource DarkOpacityBrush}" CornerRadius="4" Height="100" Width="50">
                                            <Path Fill="White" Margin="16" Style="{StaticResource LeftPathStyle}"/>
                                        </Border>
                                    </Button>
                                    <Button Command="interactivity:ControlCommands.Next" HorizontalAlignment="Right" Margin="0,0,30,0" Style="{StaticResource ButtonCustom}" VerticalAlignment="Center">
                                        <Border Background="{DynamicResource DarkOpacityBrush}" CornerRadius="4" Height="100" Width="50">
                                            <Path Fill="White" Margin="16" Style="{StaticResource RightPathStyle}"/>
                                        </Border>
                                    </Button>
                                </hc:SimplePanel>
                                <StackPanel x:Name="PART_PanelPage" HorizontalAlignment="Center" Margin="0,0,0,20" Orientation="Horizontal" VerticalAlignment="Bottom"/>
                            </hc:SimplePanel>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="GridTop" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="GridTop" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="Transparent"
          x:Name="AnimeCarousel">

        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseEnter">
                <i:InvokeCommandAction Command="{Binding MouseEnterCarouselCommand}"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseLeave">
                <i:InvokeCommandAction Command="{Binding MouseLeaveCarouselCommand}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.03*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="0.03*"/>
        </Grid.ColumnDefinitions>

        <controls:ExtendedCarousel Style="{DynamicResource CarouselStyle1}"
                                   AutoRun="False"
                                   IndexPage="{Binding PageIndex, Mode=TwoWay}"
                                   ItemsSource="{Binding AnimeTitle, Mode=TwoWay}"
                                   HorizontalAlignment="Stretch"
                                   Height="280"
                                   Margin="9,0,0,0"
                                   Grid.Column="1">

            <hc:Carousel.ItemTemplate>
                <DataTemplate>
                    <materialDesign:Card Width="210"
                                         Height="280"
                                         Cursor="Hand"
                                         Margin="0,0,20,0"
                                         Background="{StaticResource NavigationBarBackground}">

                        <materialDesign:Card.Style>
                            <Style TargetType="materialDesign:Card" BasedOn="{StaticResource MaterialDesignElevatedCard}">
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="{StaticResource BorderWindowBlueColor}" Offset="0"/>
                                            <GradientStop Color="{StaticResource BorderPurplWindowPinkColor}" Offset="0.75"/>
                                            <GradientStop Color="{StaticResource BorderWindowPurpleColor}" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <!-- Плавное появление бордера -->
                                                    <ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
                                                                        From="0" To="4" 
                                                                        Duration="0:0:0.2"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <!-- Плавное исчезновение бордера -->
                                                    <ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
                                                                        From="4" To="0" 
                                                                        Duration="0:0:0.2"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:Card.Style>

                        <StackPanel VerticalAlignment="Top">
                            <!-- Изображение (постер) -->
                            <Image Source="{Binding Posters.Original.Url}"
                                   Height="208"
                                   Stretch="UniformToFill"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Stretch"/>

                            <!-- Текстовая информация -->
                            <StackPanel Margin="10,15">
                                <TextBlock Text="{Binding Names.Ru}"
                                           FontWeight="Bold"
                                           Foreground="{StaticResource TextColor}"
                                           TextWrapping="Wrap"
                                           TextTrimming="CharacterEllipsis"
                                           MaxHeight="20"
                                           FontSize="14"/>

                                <TextBlock Foreground="{StaticResource SecondaryTextColor}"
                                           FontSize="13"
                                           Margin="0,5,0,0">

                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} эп. - {1}">
                                            <Binding Path="Player.Episodes.Last" />
                                            <Binding Path="Season.Year" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                        </StackPanel>
                        
                    </materialDesign:Card>
                </DataTemplate>
            </hc:Carousel.ItemTemplate>
        </controls:ExtendedCarousel>

        <Button HorizontalAlignment="Left"
                Command="{Binding PagePrevCommand}"
                Grid.Column="0"
                Grid.ColumnSpan="2">

            <materialDesign:PackIcon Kind="ChevronLeft"
                                     Width="56"
                                     Height="56"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"/>
            
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
                    <Setter Property="Opacity" Value="0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=AnimeCarousel}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="0" To="1" 
                                                         Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="1" To="0" 
                                                         Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>

                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style> 

        </Button>

        <Button Grid.Column="1"
                HorizontalAlignment="Right"
                Command="{Binding PageNextCommand}"
                Grid.ColumnSpan="2">

            <materialDesign:PackIcon Kind="ChevronRight"
                                     Width="56"
                                     Height="56"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"/>

            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
                    <Setter Property="Opacity" Value="0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=AnimeCarousel}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="0" To="1" 
                                                         Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="1" To="0" 
                                                         Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>

                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

        </Button>
    </Grid>

</UserControl>